generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Institute {
  id           String         @id @default(uuid())
  name         String         @unique
  email        String         @unique
  password     String
  departments  Department[]  
  academicBlocks AcademicBlock[]
  faculties Faculty[]
}

model Department {
  id           String       @id @default(uuid())
  name         String
  code         String
  instituteId  String

  faculties    Faculty[]
  courses      Course[]
  institute    Institute    @relation(fields: [instituteId], references: [id], onDelete: Cascade)
}

enum FacultyRank {
  PROFESSOR
  ASSOCIATE_PROFESSOR
  ASSISTANT_PROFESSOR
}

model Faculty {
  id           String       @id @default(uuid())
  firstName    String
  lastName     String
  email        String
  rank         FacultyRank
  departmentId String
  instituteId  String

  institute    Institute    @relation(fields: [instituteId], references: [id], onDelete: Cascade)
  department   Department   @relation(fields: [departmentId], references: [id], onDelete: Cascade)
}

model Course {
  id           String       @id @default(uuid())
  name         String
  credits      Int
  departmentId String
  isLab        Boolean       @default(false)

  department   Department   @relation(fields: [departmentId], references: [id], onDelete: Cascade)
}

model AcademicBlock {
  id           String       @id @default(uuid())
  name         String?
  blockCode    String       @unique
  instituteId  String

  rooms        Room[]
  institute    Institute    @relation(fields: [instituteId], references: [id], onDelete: Cascade)
}

model Room {
  id           String       @id @default(uuid())
  floor        Int
  code         Int
  blockId      String

  academicBlock AcademicBlock @relation(fields: [blockId], references: [id], onDelete: Cascade)
}
